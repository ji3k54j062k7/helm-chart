{{- if .Values.upf.enabled }}
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: open5gs-upf-deployment
spec:
  selector:
    matchLabels:
      app: open5gs-upf
  replicas: 1
  template:
    metadata:
      labels:
        app: open5gs-upf
    spec:
      containers:      
      - name: open5gs-upf-container
        image: {{ .Values.open5gcImage }}
        securityContext:
          privileged: true
        command: ["/bin/sh"]
        args: ["-c", "/open5gs/install/setup-uptun.sh && /open5gs/install/bin/open5gs-upfd"]
        volumeMounts:
          - mountPath: /dev/net/tun
            name: tun-volume
          - name: open5gs-upfcfg
            mountPath: /open5gs/install/etc/open5gs/upf.yaml
            subPath: upf.yaml
      initContainers:
      - name: init-network-client
        image: {{ .Values.generic.networkImage }}
        command: ["/go/bin/client"]
        args: ["-s=unix:///tmp/vortex.sock", "-b={{ .Values.generic.interface }}", "-n={{ .Values.upf.interface }}", "-i={{ .Values.upf.addresses }}"]
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_UUID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        volumeMounts:
        - mountPath: /tmp/
          name: grpc-sock
      volumes:
      - name: grpc-sock
        hostPath:
          path: /tmp/vortex/
      - name: tun-volume
        hostPath:
          path: /dev/net/tun
      - name: open5gs-upfcfg
        configMap:
          name: {{ .Release.Name }}-configmap
          items:
          - key: upf.yaml
            path: upf.yaml
{{- end }}