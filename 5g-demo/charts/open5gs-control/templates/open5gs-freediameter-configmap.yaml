kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-freediameter-configmap
apiVersion: v1
data:
  hss.conf: |
    Identity = "hss.localdomain";
    Realm = "localdomain";
    ListenOn = "{{ .Values.hss.ip }}";
    TLS_Cred = "/open5gs/install/etc/freeDiameter/hss.cert.pem", "/open5gs/install/etc/freeDiameter/hss.key.pem";
    TLS_CA = "/open5gs/install/etc/freeDiameter/cacert.pem";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dbg_msg_dumps.fdx" : "0x8888";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_rfc5777.fdx";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_mip6i.fdx";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_nasreq.fdx";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_nas_mipv6.fdx";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_dcca.fdx";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_dcca_3gpp.fdx";
    ConnectPeer = "mme.localdomain" { ConnectTo = "{{ .Values.mme.ip }}"; No_TLS; };
  mme.conf: |
    Identity = "mme.localdomain";
    Realm = "localdomain";
    ListenOn = "{{ .Values.mme.ip }}";
    TLS_Cred = "/open5gs/install/etc/freeDiameter/mme.cert.pem", "/open5gs/install/etc/freeDiameter/mme.key.pem";
    TLS_CA = "/open5gs/install/etc/freeDiameter/cacert.pem";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dbg_msg_dumps.fdx" : "0x8888";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_rfc5777.fdx";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_mip6i.fdx";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_nasreq.fdx";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_nas_mipv6.fdx";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_dcca.fdx";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_dcca_3gpp.fdx";
    ConnectPeer = "hss.localdomain" { ConnectTo = "{{ .Values.hss.ip }}"; No_TLS; };
  pcrf.conf: |
    Identity = "pcrf.localdomain";
    Realm = "localdomain";
    ListenOn = "{{ .Values.pcrf.ip }}";
    TLS_Cred = "/open5gs/install/etc/freeDiameter/pcrf.cert.pem", "/open5gs/install/etc/freeDiameter/pcrf.key.pem";
    TLS_CA = "/open5gs/install/etc/freeDiameter/cacert.pem";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dbg_msg_dumps.fdx" : "0x8888";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_rfc5777.fdx";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_mip6i.fdx";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_nasreq.fdx";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_nas_mipv6.fdx";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_dcca.fdx";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_dcca_3gpp.fdx";
    ConnectPeer = "smf.localdomain" { ConnectTo = "{{ .Values.smf.ip }}"; No_TLS; };
  smf.conf: |
    Identity = "smf.localdomain";
    Realm = "localdomain";
    ListenOn = "{{ .Values.smf.ip }}";
    TLS_Cred = "/open5gs/install/etc/freeDiameter/smf.cert.pem", "/open5gs/install/etc/freeDiameter/smf.key.pem";
    TLS_CA = "/open5gs/install/etc/freeDiameter/cacert.pem";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dbg_msg_dumps.fdx" : "0x8888";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_rfc5777.fdx";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_mip6i.fdx";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_nasreq.fdx";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_nas_mipv6.fdx";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_dcca.fdx";
    LoadExtension = "/open5gs/install/lib/x86_64-linux-gnu/freeDiameter/dict_dcca_3gpp.fdx";
    ConnectPeer = "pcrf.localdomain" { ConnectTo = "{{ .Values.pcrf.ip }}"; No_TLS; };